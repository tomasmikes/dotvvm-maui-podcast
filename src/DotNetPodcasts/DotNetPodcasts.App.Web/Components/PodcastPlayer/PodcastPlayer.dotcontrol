@viewModel System.Object, mscorlib
@baseType DotNetPodcasts.App.Web.Components.PodcastPlayer.PodcastPlayer, DotNetPodcasts.App.Web
@noWrapperTag

<div class="player-panel" DataContext="{value: _control.PodcastPlayerModel}">
    <div class="player-panel__episode-info">
        <img src="https://picsum.photos/seed/dotvvm-podcast/200/300" alt="podcast image" />
        <div>
            <dot:Literal Text="{value: EpisodeName}" />
            <br />
            <dot:Literal Text="{value: PodcastName}" />
        </div>
    </div>
    <div class="player-panel__playback-tools">
        <div class="player-panel__playback-tools__arrows">
            <cc:Icon Name="angle-left" />
            <cc:Icon Name="angle-up" />
            <cc:Icon Name="angle-right" />
        </div>
        <div class="player-panel__playback-tools__timer">
            {{value: ElapsedEpisodeTime}}
            <input type="range" min="0" max="{value: TotalEpisodeTime}" step="1" value="{value: ElapsedEpisodeTime}" />
            48:28
        </div>
    </div>
    <div class="player-panel__playback-options">
        <cc:Icon Name="angle-up" />
        1.0x
        <cc:Icon Name="angle-down" />
        <cc:Icon Name="angle-left" />
        <cc:Icon Name="angle-left" />

        <div class="player-panel__playback-options__volume">
            <cc:Icon Name="angle-left" />
            <input type="range" min="0" max="100" step="1" value="{value: Volume}">
        </div>
    </div>

    <dot:InlineScript>
    
    const elapsedEpisodeTimeBar = document.querySelector(".player-panel__playback-tools__timer > input");

    elapsedEpisodeTimeBar.addEventListener("change", function (e) {
        const setTime = e.target.value;
        const patchedElapsedEpisodeTime = {
            "PodcastPlayer": { "ElapsedEpisodeTime": setTime }
        };
        dotvvm.patchState(patchedElapsedEpisodeTime);
    });

    const volumeBar = document.querySelector(".player-panel__playback-options__volume > input");

    volumeBar.addEventListener("change", function (e) {
        const volume = e.target.value;
        const patchedVolume = {
            "PodcastPlayer": { "Volume": volume }
        };
        dotvvm.patchState(patchedVolume);
    });
    </dot:InlineScript>
</div>